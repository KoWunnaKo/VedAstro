@namespace Website.Pages
@using VedAstro.Library;
@using System.Xml.Linq


@*SIMPLE HEADING TITLE WITH NICELY POSITIONED ICON*@

<div class="fw-bold hstack gap-2 d-flex" style="@MaxWidthCss">
    @if (IsIconMode)
    {
        <Icon NextToText="true" IconName="@IconName" Size="@IconSize"/>
    }

    @switch (TitleHolder.ToLower())
    {
        case "h1":
            <h1 class="mt-2 me-auto">@Title</h1>
            break;
        case "h2":
            <h2 class="mt-2 me-auto">@Title</h2>
            break;
        case "h3":
            <h3 class="mt-2 me-auto">@Title</h3>
            break;
        case "h4":
            <h4 class="mt-2 me-auto">@Title</h4>
            break;
        case "h5":
            <h5 class="mt-2 me-auto">@Title</h5>
            break;
        case "h6":
            <h6 class="mt-2 me-auto">@Title</h6>
            break;
    }
    @ButtonRow
</div>
<hr class="mt-1 mb-2" />



@code {

    /// <summary>
    /// If true max width has been specified
    /// </summary>
    private bool IsCustomWidth => MaxWidthPx != 0;

    /// <summary>
    /// If true then icon name specified
    /// </summary>
    private bool IsIconMode => !string.IsNullOrEmpty(IconName);

    /// <summary>
    /// setting custom css based on props
    /// </summary>
    private string MaxWidthCss => IsCustomWidth ? $" max-width:{MaxWidthPx}px;" : "";

    [Parameter]
    public int MaxWidthPx { get; set; } = 0;

    /// <summary>
    /// Default 38
    /// </summary>
    [Parameter]
    public int IconSize { get; set; } = AppData.DefaultIconSize;

    [Parameter]
    public string Title { get; set; } = "Demo Title";

    /// <summary>
    /// H3 default
    /// </summary>
    [Parameter]
    public string TitleHolder { get; set; } = "h3";

    [Parameter]
    public string IconName { get; set; } = "";

    [Parameter]
    public RenderFragment ButtonRow { get; set; }

}
